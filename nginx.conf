events{
}

http{

	upstream child_node_servers{

		# ip_hash; # this option will make our load balancer  proxy the request from same ip to the same server it did previous time
		#  does this by maintining an ip -> server  table


		# Your Child Node Server which should be running at these ports so that the nginx server can point to them  
		# To make sure whenevr you ping them you can distinguish which one it is set them up to 
		# return some text like "Text From server at 9001" 
		server localhost:9001;
		
		server localhost:9002;
		
		server localhost:9003;
	}

	server{
		listen 8765;
		
# at this server whenever you hit at / (i.e. http://localhost/ (root))	you will get the below message	

		location / {
#			return 200 "NGINX Server running!!!\n";

# If instead of returning a response directly we point it to some other severs  - 
# hence acting as a Load-Balancer

		proxy_pass http://child_node_servers;

		}

# whenever you will hit /node path (i.e. http://localhost/node ) you will pass it to some other sever
# hence acting as a proxy
		location /node {

			proxy_set_header proxied nginx;

			proxy_pass "http://localhost:8888/";
		}

# regex to match .gif, .jpg , .png files 
		location ~ \.(gif|jpg|png)$ {
       		root /data/images;
    	}

	}

	server{
		listen 8686;
		
# at this server whenever you hit at / (i.e. http://localhost/ (root))	you will get the below message	

		location / {
			return 200 "NGINX Server running!!!\n";
		}

# whenever you will hit /node path (i.e. http://localhost/node ) you will pass it to some other sever
# hence acting as a proxy
		location /node {

			proxy_set_header proxied nginx;

			proxy_pass "http://localhost:8888/";
		}

# regex to match .gif, .jpg , .png files 
		location ~ \.(gif|jpg|png)$ {
       		root /data/images;
    	}
		
	}

}